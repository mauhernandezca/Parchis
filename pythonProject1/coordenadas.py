# ==============================================================================
# COORDENADAS DE LA RUTA PRINCIPAL
# ==============================================================================
coordenadas = {
    1: (-185.0 - 7.5, -70),
    2: (-170.0 - 7.5, -70),
    3: (-155.0 - 7.5, -70),
    4: (-140.0 - 7.5, -70),
    5: (-125.0 - 7.5, -70),
    6: (-110.0 - 7.5, -70),
    7: (-95.0 - 7.5, -70),
    8: (-80.0 - 7.5, -70),
    9: (-70 + 7.5, -82.5 - 7.5),
    10: (-70 + 7.5, -97.5 - 7.5),
    11: (-70 + 7.5, -112.5 - 7.5),
    12: (-70 + 7.5, -127.5 - 7.5),
    13: (-70 + 7.5, -142.5 - 7.5),
    14: (-70 + 7.5, -157.5 - 7.5),
    15: (-70 + 7.5, -172.5 - 7.5),
    16: (-70 + 7.5, -187.5 - 7.5),
    17: (-25, -187.5 - 7.5),
    18: (20, -187.5 - 7.5),
    19: (20, -172.5 - 7.5),
    20: (20, -157.5 - 7.5),
    21: (20, -142.5 - 7.5),
    22: (20, -127.5 - 7.5),
    23: (20, -112.5 - 7.5),
    24: (20, -97.5 - 7.5),
    25: (20, -82.5 - 7.5),
    26: (55.0 - 7.5, -70),
    27: (70.0 - 7.5, -70),
    28: (85.0 - 7.5, -70),
    29: (100.0 - 7.5, -70),
    30: (115.0 - 7.5, -70),
    31: (130.0 - 7.5, -70),
    32: (145.0 - 7.5, -70),
    33: (160.0 - 7.5, -70),
    34: (160.0 - 7.5, -30),
    35: (160.0 - 7.5, 15),
    36: (145.0 - 7.5, 15),
    37: (130.0 - 7.5, 15),
    38: (115.0 - 7.5, 15),
    39: (100.0 - 7.5, 15),
    40: (85.0 - 7.5, 15),
    41: (70.0 - 7.5, 15),
    42: (55.0 - 7.5, 15),
    43: (20, 52.5 - 7.5),
    44: (20, 67.5 - 7.5),
    45: (20, 82.5 - 7.5),
    46: (20, 97.5 - 7.5),
    47: (20, 112.5 - 7.5),
    48: (20, 127.5 - 7.5),
    49: (20, 142.5 - 7.5),
    50: (20, 157.5 - 7.5),
    51: (-25, 157.5 - 7.5),
    52: (-70, 157.5 - 7.5),
    53: (-70, 142.5 - 7.5),
    54: (-70, 127.5 - 7.5),
    55: (-70, 112.5 - 7.5),
    56: (-70, 97.5 - 7.5),
    57: (-70, 82.5 - 7.5),
    58: (-70, 67.5 - 7.5),
    59: (-70, 52.5 - 7.5),
    60: (-80.0 - 7.5, 15),
    61: (-95.0 - 7.5, 15),
    62: (-110.0 - 7.5, 15),
    63: (-125.0 - 7.5, 15),
    64: (-140.0 - 7.5, 15),
    65: (-155.0 - 7.5, 15),
    66: (-170.0 - 7.5, 15),
    67: (-185.0 - 7.5, 15),
    68: (-185.0 - 7.5, -30)
}


# ==============================================================================
# FUNCIÓN ROUTE: OBTENER LA RUTA PRINCIPAL
# ==============================================================================
def route(start, finish, total=68):
    """
    Genera la ruta principal desde la casilla 'start' hasta 'finish'.

    Parámetros:
      start  -- Casilla de inicio.
      finish -- Casilla de finalización.
      total  -- Número total de casillas (por defecto 68).

    Retorna:
      Una lista de coordenadas que representan la ruta principal.
    """
    path = []
    pos = start
    while True:
        path.append(coordenadas[pos])
        if pos == finish:
            break
        pos = pos + 1 if pos < total else 1
    return path


# ==============================================================================
# DICCIONARIO DE RUTAS PRINCIPALES
# ==============================================================================
paths = {
    "blue": route(5, 68),
    "red": route(22, 17),
    "gold": route(39, 34),
    "green": route(56, 51)
}


# ==============================================================================
# FUNCIÓN EXCLUSIVE_LANE_RED: CARRIL EXCLUSIVO PARA EL ROJO
# ==============================================================================
def exclusive_lane_red():
    """
    Retorna la lista de coordenadas para el carril exclusivo del jugador rojo.
    """
    return [
        (-25, -185 + 7.5),
        (-25, -170 + 7.5),
        (-25, -155 + 7.5),
        (-25, -140 + 7.5),
        (-25, -125 + 7.5),
        (-25, -110 + 7.5),
        (-25, -95 + 7.5),
        (-25, -80 + 7.5)
    ]


# ==============================================================================
# FUNCIÓN EXCLUSIVE_LANE_GOLD: CARRIL EXCLUSIVO PARA EL AMARILLO
# ==============================================================================
def exclusive_lane_gold():
    """
    Retorna la lista de coordenadas para el carril exclusivo del jugador amarillo (gold).
    """
    return [
        (132.5 + 7.5, -30),
        (117.5 + 7.5, -30),
        (102.5 + 7.5, -30),
        (87.5 + 7.5, -30),
        (72.5 + 7.5, -30),
        (57.5 + 7.5, -30),
        (42.5 + 7.5, -30),
        (27.5 + 7.5, -30)
    ]


# ==============================================================================
# FUNCIÓN EXCLUSIVE_LANE_GREEN: CARRIL EXCLUSIVO PARA EL VERDE
# ==============================================================================
def exclusive_lane_green():
    """
    Retorna la lista de coordenadas para el carril exclusivo del jugador verde.
    """
    return [
        (-25, 130 + 7.5),
        (-25, 115 + 7.5),
        (-25, 100 + 7.5),
        (-25, 85 + 7.5),
        (-25, 70 + 7.5),
        (-25, 55 + 7.5),
        (-25, 40 + 7.5),
        (-25, 25 + 7.5)
    ]


# ==============================================================================
# FUNCIÓN EXCLUSIVE_LANE_BLUE: CARRIL EXCLUSIVO PARA EL AZUL
# ==============================================================================
def exclusive_lane_blue():
    """
    Retorna la lista de coordenadas para el carril exclusivo del jugador azul.
    """
    return [
        (-182.5 + 7.5, -30),
        (-167.5 + 7.5, -30),
        (-152.5 + 7.5, -30),
        (-137.5 + 7.5, -30),
        (-122.5 + 7.5, -30),
        (-107.5 + 7.5, -30),
        (-92.5 + 7.5, -30),
        (-77.5 + 7.5, -30)
    ]


# ==============================================================================
# DICCIONARIO DE RUTAS COMPLETAS (CON CARRILES EXCLUSIVOS)
# ==============================================================================
full_paths = {
    "blue": paths["blue"] + exclusive_lane_blue(),
    "red": paths["red"] + exclusive_lane_red(),
    "gold": paths["gold"] + exclusive_lane_gold(),
    "green": paths["green"] + exclusive_lane_green()
}

# ==============================================================================
# IMPRESIÓN DE LAS RUTAS COMPLETAS PARA VERIFICACIÓN
# ==============================================================================
for color, path in full_paths.items():
    print(f"{color}: {path}")
